import { AsyncStorage } from "react-native";import { Facebook } from "expo";const FACEBOOK_LOGIN_SUCCESS = "facebookLoginSuccess";const FACEBOOK_LOGIN_FAIL = "facebookLoginFail";const facebookLogin = () => async dispatch => {  // store token in AsyncStorage for persisting the token.  let fb_token = await AsyncStorage.getItem ("fb_token");  console.log (fb_token);  if (fb_token) {    dispatch ({      type : FACEBOOK_LOGIN_SUCCESS,      // store token in redux for use when app is running      payload : fb_token,    });  } else {    //start FB login process    doFacebookLogin (dispatch);  }};const facebookLogout = () => async () => {  await AsyncStorage.removeItem ("fb_token");};const doFacebookLogin = async dispatch => {  // type shows status when user attempted to log in with permissions  let {token, type} = await Facebook.logInWithReadPermissionsAsync (    "167655837386607",    {      permissions : ["public_profile"],    },  );  if (type === "cancel") {    return dispatch ({      type : FACEBOOK_LOGIN_FAIL,    });  }  await AsyncStorage.setItem ("fb_token", token);  dispatch ({type : FACEBOOK_LOGIN_SUCCESS, payload : token});};export {  FACEBOOK_LOGIN_SUCCESS,  FACEBOOK_LOGIN_FAIL,  facebookLogin,  facebookLogout,};