import React, { Component } from "react";import { Animated, Dimensions, Easing, Text, View } from "react-native";import { Button } from "react-native-elements";import Check from "../../components/Animation/Check2";import Dog from "../../components/Animation/Dog";const { width: SCREEN_WIDTH, height: SCREEN_HEIGHT } = Dimensions.get("window");class Slides extends Component {  constructor (props){    super(props)    this.state = {      sliderChanged: false,      anime_sliderSwipe: new Animated.Value(0),    };    this.anime_sliderSwipe=Animated.timing(this.state.anime_sliderSwipe,{      toValue:300,      easing:Easing.linear    })    this.anime_sliderSwipe2=Animated.timing(this.state.anime_sliderSwipe,{      toValue:0,      easing:Easing.linear    })  }  renderSlides = () => {    const { data } = this.props;    return data.map((slide, i) => {      return (        <View key={slide.text} style={[styles.slide, { backgroundColor: slide.bgColor }]}>          <View            style={{              alignItems: "center",              justifyContent: "center",              width: SCREEN_WIDTH,              flex: 1            }}          >            {!this.state.sliderChanged && <Check />}          </View>          <View            style={{              justifyContent: "flex-start",              alignItems: "center",              width: SCREEN_WIDTH,              flex: 1            }}          >            <Text style={styles.text}>{slide.text}</Text>            {i === data.length - 1 ? (              <Button                title={" Go "}                titleStyle={{ color: "gray" }}                raised                buttonStyle={styles.welcomeButton}                onPress={this.props.onWelcomeSlidesComplete}              />            ) : null}          </View>        </View>      );    });  };  render() {    /*const opacityChange = this.state.anime_sliderSwipe.interpolate({      inputRange: [0,  300],      outputRange: [1,0],      extrapolate: "clamp"    });*/    return (      <Animated.ScrollView        //style={{opacity:opacityChange}}        //ref={ref => (this._aniSV = ref)}        horizontal        pagingEnabled        showsHorizontalScrollIndicator        onScrollBeginDrag={() => {          //this.anime_sliderSwipe.start(this.state.anime_sliderSwipe.setValue(300))          //this.setState({ sliderChanged: true });        }}        onScrollEndDrag={() => {          //this.anime_sliderSwipe2.start(this.state.anime_sliderSwipe.setValue(0))        }}        onMomentumScrollEnd={() => {          console.log('scroll end')          this.setState({ sliderChanged: !this.state.sliderChanged });        }}        /*onScrollEndDrag={() => {          console.log("scroll");          this.setState({ sliderChanged: false });        }}*/      >        {/*{this.renderSlides()}*/}        <View style={[styles.slide, { backgroundColor: "black" }]}>          <View            style={{              alignItems: "center",              justifyContent: "center",              width: SCREEN_WIDTH,              flex: 3            }}          >            <Dog/>            {/*{!this.state.sliderChanged && <Check />}*/}          </View>          <View            style={{              justifyContent: "flex-start",              alignItems: "center",              width: SCREEN_WIDTH * 0.8,              flex: 1            }}          >            <Text style={styles.text}>              <Text>Are you a pet person?</Text>              <Text>Are you looking for a companion?</Text>            </Text>          </View>        </View>        <View style={[styles.slide, { backgroundColor: "black" }]}>          <View            style={{              alignItems: "center",              justifyContent: "center",              width: SCREEN_WIDTH,              flex: 3            }}          >            <Check flag={this.state.sliderChanged} />            {/*{!this.state.sliderChanged && <Dog />}*/}          </View>          <View            style={{              justifyContent: "flex-start",              alignItems: "center",              width: SCREEN_WIDTH,              flex: 1            }}          >            <Text style={styles.text}>Right?</Text>          </View>        </View>      </Animated.ScrollView>    );  }}const styles = {  slide: {    width: SCREEN_WIDTH,    height: SCREEN_HEIGHT,    flex: 1,    justifyContent: "center",    alignItems: "center"  },  text: {    flex:1,    fontSize: 20,    textAlign: "left",    color: "white"  },  welcomeButton: {    backgroundColor: "white",    marginTop: 30  },  welcomeButtonText: {    color: "black"  }};export default Slides;