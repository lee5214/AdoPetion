import React, { Component } from "react";import { Text, View } from "react-native";import { MapView } from "expo";import Icon from "react-native-vector-icons/MaterialIcons";class Marker extends Component {  state={    detail:{}  }  static getDerivedStateFromProps(nextProps,preProps){    console.log('nextProps',nextProps)    return {          detail:nextProps.orgsDetailList    }  }  componentDidUpdate(){    if(this.props.orgsDetailList[this.props.marker.orgID]) {      console.log('time to fly')      this.marker.showCallout ()    }  }  render() {    let { marker, orgsDetailList } = this.props;    let [latitude, longitude] = marker.location;    console.log(orgsDetailList);    return (      <MapView.Marker        key={`markersInSearchArea-${marker.key}`}        ref={_marker => {this.marker = _marker}}        coordinate={{          latitude,          longitude        }}        identifier={marker.key.toString()}        onPress={() => this.props.onMarkerPress(marker.key)}        //ref={marker => (this.marker[marker.key] = marker)}        //title={orgsDetailList[marker.key] ? orgsDetailList[marker.key].city : ""}        //description={"bbb"}      >        <View style={styles.markerCircle}>          <Icon name="pets" size={20} color={"white"} type="materialicons" />        </View>        {this.state.detail[marker.key]? (          <MapView.Callout>            <Text>yeah{/*{this.state.detail[marker.key].city}*/}</Text>          </MapView.Callout>        ):<MapView.Callout>          <Text>Loading</Text></MapView.Callout>}        {/*{this.state.calloutDetailList[marker.key] ? (*/}        {/*<MapView.Callout>*/}        {/*<Text>{this.state.calloutDetailList[marker.key].city}</Text>*/}        {/*</MapView.Callout>*/}        {/*) : (*/}        {/*<MapView.Callout>*/}        {/*<Button*/}        {/*title={"fetch"}*/}        {/*onPress={() => this.onMarkerPress(marker.key)}*/}        {/*/>*/}        {/*<Text>loading</Text>*/}        {/*</MapView.Callout>*/}        {/*)}*/}        {/*<MapView.Callout>*/}        {/*<View style={styles.calloutContainer}>*/}        {/*<Text>--{marker.key}--</Text>*/}        {/*{this.state.calloutDetailList[marker.key] && (*/}        {/*<Text>{this.props.orgsDetailList[marker.key].city}</Text>*/}        {/*)}*/}        {/*</View>*/}        {/*</MapView.Callout>*/}      </MapView.Marker>    );  }}const styles = {  markerCircle: {    height: 25,    width: 25,    borderRadius: 5,    overflow: "hidden",    backgroundColor: "rgba(0,122,255,0.1)",    borderWidth: 1,    borderColor: "white",    alignItems: "center",    justifyContent: "center"  }};export default Marker;