import React, { Component } from "react";import { Text, View } from "react-native";import { MapView } from "expo";import Icon from "react-native-vector-icons/MaterialIcons";class Marker extends Component {  componentDidUpdate() {    //if (this.props.focusedMarkerID === this.state.id) {    if (this.props.calloutVisible) {      this.marker.showCallout();    }  }  onMarkerPress = markerKey => {    console.log("button onpressed");    //this.props.navigation.navigate('deck')    this.props.fetchOrgDetail(markerKey);    this.props.focusMarker(markerKey);  };  render() {    //console.log('this.marker',this.marker)    let { marker, orgsDetailList } = this.props;    let [latitude, longitude] = marker.location;    console.log("visible", this.props.visible, marker.key);    return (      <MapView.Marker        key={`markersInSearchArea-${marker.key}`}        ref={ref => {          this.marker = ref;        }}        //ref={marker => (this.markers[marker.key] = marker)}        coordinate={{          latitude,          longitude        }}        //identifier={marker.key.toString()}        onPress={() => this.onMarkerPress(marker.key)}        //title={orgsDetailList[marker.key] ? orgsDetailList[marker.key].city : ""}        //description={"bbb"}      >        <View style={styles.markerCircle}>          <Icon name="pets" size={20} color={"white"} type="materialicons" />        </View>        <MapView.Callout style={{ width: 200, height: 200, padding: 20 }}>          {orgsDetailList[marker.key] ? (            <Text>{orgsDetailList[marker.key].orgID}</Text>          ) : (            <View>            <Text>loading</Text>            </View>          )}        </MapView.Callout>        {/*{this.state.calloutDetailList[marker.key] ? (*/}        {/*<MapView.Callout>*/}        {/*<Text>{this.state.calloutDetailList[marker.key].city}</Text>*/}        {/*</MapView.Callout>*/}        {/*) : (*/}        {/*<MapView.Callout>*/}        {/*<Button*/}        {/*title={"fetch"}*/}        {/*onPress={() => this.onMarkerPress(marker.key)}*/}        {/*/>*/}        {/*<Text>loading</Text>*/}        {/*</MapView.Callout>*/}        {/*)}*/}        {/*<MapView.Callout>*/}        {/*<View style={styles.calloutContainer}>*/}        {/*<Text>--{marker.key}--</Text>*/}        {/*{this.state.calloutDetailList[marker.key] && (*/}        {/*<Text>{this.props.orgsDetailList[marker.key].city}</Text>*/}        {/*)}*/}        {/*</View>*/}        {/*</MapView.Callout>*/}      </MapView.Marker>    );  }}const styles = {  markerCircle: {    height: 25,    width: 25,    borderRadius: 5,    overflow: "hidden",    backgroundColor: "rgba(0,122,255,0.1)",    borderWidth: 1,    borderColor: "white",    alignItems: "center",    justifyContent: "center"  }};export default Marker;