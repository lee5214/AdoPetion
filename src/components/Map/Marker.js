import React, { Component } from "react";import { Animated, StyleSheet, Text, View } from "react-native";import MapView from "react-native-maps";import Icon from "react-native-vector-icons/MaterialIcons";import Spinner from "../../components/Common/Spinner";class Marker extends Component {  constructor(props) {    super(props);    this.markers = {};  }  componentDidUpdate(prevProps) {    if (prevProps.focusedMarkerID !== this.props.focusedMarkerID || prevProps.focusedOrg !== this.props.focusedOrg) {      this.updateCallout();    }  }  updateCallout() {    if (this.props.calloutVisible) {      this.markers[this.props.focusedMarkerID].showCallout();    }  }  render() {    const { geoMarker } = this.props;    const [latitude, longitude] = geoMarker.location;    return (      <MapView.Marker        key={`markersInSearchArea-${geoMarker.key}`}        ref={ref => (this.markers[geoMarker.key] = ref)}        coordinate={{          latitude,          longitude        }}        identifier={geoMarker.key.toString()}        onPress={() => this.props.onMarkerPress(geoMarker)}        calloutOffset={{x:100,y:100}}      >        <Animated.View style={styles.markerIcon}>          <Icon name="home" size={20} color={"white"} type="materialicons" />        </Animated.View>        {this.props.focusedOrg ? (          <MapView.Callout style={styles.calloutContainer}>            <View style={{ flex: 1,justifyContent:'center' }}>              {/*<View                style={{                  bottom: 0,                  justifyContent: "center",                  alignItems: "center",                  flexDirection: "row",                  backgroundColor: "#ccc",                  flexWrap: "wrap"                }}              >                <TouchableOpacity                  style={styles.iconContainer}                  onPress={() => {                    console.log("123");                  }}                >                  <Text>AAAA</Text>                </TouchableOpacity>                <TouchableOpacity                  style={styles.iconContainer}                  onPress={() => {                    console.log("123");                  }}                >                  <Icon2 name="phone" size={30} color={"black"} type="entypo" />                </TouchableOpacity>                <View style={styles.iconContainer}>                  <Icon2 name="mail" size={30} color={"black"} type="entypo" />                </View>                <View style={styles.iconContainer}>                  <Icon2 name="facebook" size={30} color={"black"} type="entypo" />                </View>                <View style={styles.iconContainer}>                  <Icon2 name="facebook" size={30} color={"black"} type="entypo" />                </View>              </View>*/}              <View style={styles.row}>                <View style={styles.eContainer}>                  <Text style={styles.eKey}>Type</Text>                  <Text style={styles.eValue}>{this.props.focusedOrg.orgType || "N/A"}</Text>                </View>              </View>              <View style={styles.row}>                <View style={styles.eContainer}>                  <Text style={styles.eKey}>Species</Text>                  <Text style={styles.eValue}>{this.props.focusedOrg.orgSpecies || "N/A"}</Text>                </View>              </View>              <View style={styles.row}>                <View style={styles.eContainer}>                  <Text style={styles.eKey}>Services</Text>                  <Text style={styles.eValue}>{this.props.focusedOrg.services || "N/A"}</Text>                </View>              </View>            </View>          </MapView.Callout>        ) : (          <MapView.Callout style={styles.calloutContainer}>            <Spinner size={"large"} color={"#000000"} />          </MapView.Callout>        )}      </MapView.Marker>    );  }}const styles = StyleSheet.create({  markerIcon: {    height: 40,    width: 40,    borderRadius: 25,    overflow: "hidden",    backgroundColor: "rgba(0,0,0,0.8)",    alignItems: "center",    justifyContent: "center"  },  calloutContainer: {    flex: 1,    width: 200,    height: 150,    padding: 5,    backgroundColor: "white",    overflow: "hidden"  },  row: { flexDirection: "row", justifyContent: "space-between" },  eContainer: { flex: 1, flexDirection: "column", overflow: "hidden",shadowColor: "white" },  iconContainer: { width: "50%", overflow: "hidden", backgroundColor: "white", shadowColor: "white", justifyContent: "center", alignItems: "center" },  eKey: { color: "gray", fontSize: 8, fontWeight: "600", textAlign: "left", width: 50 },  eValue: { color: "black", fontSize: 10, fontWeight: "600", flexGrow:1},  description: { color: "white", fontSize: 10, fontWeight: "500", textAlign: "left" }});Marker.defaultProps = {  calloutVisible: false};export default Marker;