import React, { Component } from "react";import { StyleSheet, Text, View } from "react-native";import MapView from "react-native-maps";import Icon from "react-native-vector-icons/MaterialIcons";import Spinner from "../../components/Common/Spinner";class Marker extends Component {  static getDerivedStateFromProps  componentDidUpdate() {    if (this.props.calloutVisible&&this.props.orgsDetailList[this.props.marker.key]) {      this._marker.showCallout();    }  }  render() {    let { marker, orgsDetailList, onDeselectMarker } = this.props;    let [latitude, longitude] = marker.location;    let targetMarker = orgsDetailList.list[marker.key]    //console.log('marker render',orgsDetailList.list[marker.key]);    return (      <MapView.Marker        key={`markersInSearchArea-${marker.key}`}        ref={ref => {          this._marker = ref;        }}        coordinate={{          latitude,          longitude        }}        onDeselect={onDeselectMarker}        identifier={marker.key.toString()}        onPress={() => this.props.onMarkerPress(marker)}      >        <View style={styles.markerCircle}>          <Icon name="pets" size={20} color={"white"} type="materialicons" />        </View>        <MapView.Callout tooltip={true} style={styles.calloutContainer}>          {orgsDetailList.list[marker.key] ? (              <Text>{targetMarker.name}</Text>            // <OrgDetailCallout key={`orgdetailcallout-${marker.key}`} detail={orgsDetailList.list[marker.key]} />          ) : orgsDetailList.list[marker.key] === undefined ? (            <Text>Sorry</Text>          ) : (            <Spinner size={"large"} color={"#000000"} />          )}        </MapView.Callout>      </MapView.Marker>    );  }}const styles = StyleSheet.create({  markerCircle: {    height: 25,    width: 25,    borderRadius: 5,    overflow: "hidden",    backgroundColor: "rgba(0,122,255,0.1)",    borderWidth: 1,    borderColor: "white",    alignItems: "center",    justifyContent: "center"  },  calloutContainer: {    width: 300,    height: 100,    padding: 0,    backgroundColor:'red'  }});Marker.defaultProps = {  calloutVisible: false};export default Marker;