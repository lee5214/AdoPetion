import React, { Component } from "react";import { connect } from "react-redux";import * as actions from "../../actions";import { Dimensions, Image, ScrollView, Text, TouchableOpacity, View } from "react-native";import { Button } from "react-native-elements";import ModalSpinner from "../../components/Common/ModalSpinner";const { height: SCREEN_HEIGHT, width: SCREEN_WIDTH } = Dimensions.get("window");class ExplorePetsList extends Component {  constructor(props) {    super(props);    this.state = {      dataLoading: false,      orgsGeoList: [],      searchParams: {        species: "Cat"      }    };  }  onImageLoadEnd = () => {    this.setState({ dataLoading: false });  };  render() {    return (      <View style={{ flex: 1 }}>        {this.state.dataLoading && (          <ModalSpinner visible={this.state.dataLoading} transparent={true} animationType={"none"} setLoadingFalse={this.setLoadingFalse} />        )}        <ScrollView style={{ flex: 1 }}>          {this.props.petsNearby &&          Object.keys(this.props.petsNearby).map(orgID => {            return (              Object.keys(this.props.petsNearby[orgID]).length > 0 && (                <View key={orgID} style={{ marginVertical: 0, paddingVertical: 20 }}>                  <Button title={orgID} onPress={()=>this.props.navigation.navigate('exploreOrgDetail',{orgID:orgID})}/>                  <Text>{Object.keys(this.props.petsNearby[orgID])[0].name}</Text>                  <PetsForOrg                    data={this.props.petsNearby[orgID]}                    onImageLoadEnd={this.onImageLoadEnd}                    navigation={this.props.navigation}                  />                </View>              )            );          })}          <Text />        </ScrollView>      </View>    );  }}const loadingImages=[require('../../assets/paw.png')]class PetsForOrg extends Component {  state = {    imageLoading: false  };  render() {    return (      <View style={{ flexDirection: "row", flex: 1, flexWrap: "wrap", justifyContent: "flex-start", alignItems: "center" }}>        {this.props.data &&        Object.keys(this.props.data).map(petID => (          <View            style={{              backgroundColor: "black",              width: SCREEN_WIDTH * 0.5 - 4,              height: SCREEN_HEIGHT * 0.3,              alignItems: "center",              marginVertical: 2,              marginHorizontal: 2            }}          >            {this.props.data[petID].pictures[0] && (              <TouchableOpacity                key={petID}                activeOpacity={0.9}                onPress={() => this.props.navigation.navigate("explorePetDetail", { petObj: this.props.data[petID] })}              >                <Image                  onLoadStart={() => {                    this.setState({ imageLoading: true });                  }}                  onLoadEnd={() => {                    this.setState({ imageLoading: false });                  }}                  style={{ width: SCREEN_WIDTH * 0.5 - 4, height: SCREEN_HEIGHT * 0.3 - 40 }}                  defaultSource={loadingImages[Math.floor(Math.random()*loadingImages.length)]}//{require("../../assets/paw.png")}                  source={{ uri: this.props.data[petID].pictures[0].largeUrl }}                />                <Text                  style={{ color: "white", padding: 10, height: 40, fontWeight: "500", textAlign: "center", alignSelf: "center" }}                >                  {this.props.data[petID].name.toUpperCase()}                </Text>              </TouchableOpacity>            )}          </View>        ))}      </View>    );  }}const mapStateToProps = state => {  return {    petsNearby: state.petsNearby,    orgsDetailList:state.orgsDetailList  };};export default connect(mapStateToProps, actions)(ExplorePetsList);