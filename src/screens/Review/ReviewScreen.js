import React, { Component } from "react";import { connect } from "react-redux";import PropTypes from "prop-types";import { Image, ScrollView, Text, TouchableOpacity, View } from "react-native";import { Card } from "react-native-elements";import Icon from "react-native-vector-icons/MaterialIcons";class ReviewScreen extends Component {  static navigationOptions = ({ navigation }) => ({    title: "Review",    headerRight: (      <Icon        name="settings"        size={20}        type="materialicons"        style={{ paddingRight: 20 }}        onPress={() => {          navigation.navigate("setting");        }}      />    ),    tabBarIcon: ({ tintColor }) => {      return <Icon name="favorite-border" color={tintColor} size={20} type="materialicons" />;    }  });  cardOnPress= animalID =>{    this.props.navigation.navigate('review_detail',{petID:animalID})  }  render() {    return (      <ScrollView>        {this.props.likedPets.map(pet => {          //console.log('org==>',this.props.orgsDetailList.list[pet.orgID].geolocation||[])          const { name, animalID, orgID, descriptionPlain, pictures } = pet;          /*const initialRegion = {       latitude:this.props.orgsDetailList.list[orgID].geoLocation[0]||0,//latitude,       longitude:this.props.orgsDetailList[orgID].geoLocation[1]||0,       latitudeDelta: 0.045,       longitudeDelta: 0.02       };*/          return (            <Card key={`reviewScreen-${animalID}`}>              <TouchableOpacity onPress={()=>this.cardOnPress(animalID)}>              <View style={{ height: 100 }}>                <Text>{name}</Text>                <View style={{ flexDirection: "row" }}>                  <Text style={{flex:3}} numberOfLines={3}>{descriptionPlain}</Text>                  <Image style={{flex:1}} source={{ uri: pictures[0].thumbnailUrl }} />                </View>              </View>              </TouchableOpacity>            </Card>          );        })}      </ScrollView>    );  }}const styles = {  detailSection: {    marginTop: 10,    marginBottom: 10,    flexDirection: "row",    justifyContent: "space-around"  }};const mapStateToProps = state => {  return {    likedPets: state.likedPets,    orgsDetailList: state.orgsDetailList  };};ReviewScreen.defaultProps = {  likedPets: []};ReviewScreen.propTypes = {  likedPets: PropTypes.array.isRequired};export default connect(mapStateToProps, null)(ReviewScreen);