import React, { Component } from "react";import { Animated, Dimensions, Easing, View } from "react-native";import { createStackNavigator } from "react-navigation";import ProfileScreen from "./ProfileScreen";import SettingScreen from "../SettingScreen";import Icon from "react-native-vector-icons/MaterialIcons";import _ from "lodash";const { width: SCREEN_WIDTH } = Dimensions.get("window");class ProfileWrapper extends Component {  constructor(props) {    super(props);    this.state = {      drawerOpen: false,      anime_drawerOpen: new Animated.Value(0)    };    this.anime_drawerOpen = Animated.timing(this.state.anime_drawerOpen, {      toValue: 300,      duration: 300,      easing: Easing.linear    });    this.anime_drawerOpen2 = Animated.timing(this.state.anime_drawerOpen, {      toValue: 0,      duration: 300,      easing: Easing.linear    });  }  static navigationOptions = {    drawerLockMode: "locked-closed",    header: null  };  static getDerivedStateFromProps(props, state) {    if (_.get(props, "navigation.state.params.from") === "reviewWrapper") {      console.log("drawer close anime");      return { drawerOpen: false };    }    return null;  }  componentDidUpdate(prevProps, prevState) {    if (this.state.drawerOpen === true && this.state.drawerOpen !== prevState.drawerOpen) {      this.props.navigation.openDrawer();      this.anime_drawerOpen.start(this.state.anime_drawerOpen.setValue(0));    }    if (this.state.drawerOpen === false && this.state.drawerOpen !== prevState.drawerOpen) {      this.props.navigation.closeDrawer();      this.anime_drawerOpen2.start(this.state.anime_drawerOpen.setValue(300));    }  }  render() {    console.log("test", this.props.navigation);    const Profile = createStackNavigator({      reviewScreen: {        screen: ProfileScreen,        navigationOptions: {          drawerLockMode: "locked-open",          headerLeft: (            <Icon              name="menu"              size={30}              type="materialicons"              style={{ paddingLeft: 20 }}              onPress={() => {                this.setState({ drawerOpen: true });                this.props.navigation.openDrawer();              }}            />          ),          tabBarIcon: ({ tintColor }) => {            return <Icon name="favorite-border" color={tintColor} size={20} type="materialicons" />;          }        }      },      setting: { screen: SettingScreen }    });    const drawerScale = this.state.anime_drawerOpen.interpolate({      inputRange: [0, 300],      outputRange: [1, 0.7],      extrapolate: "clamp"    });    const drawerLeft = this.state.anime_drawerOpen.interpolate({      inputRange: [0, 300],      outputRange: [0, SCREEN_WIDTH * 0.7],      extrapolate: "clamp"    });    return (      <Animated.View style={{ overflow: "hidden", flex: 1, transform: [{ scale: drawerScale }, { translateX: drawerLeft }] }}>        {/*<View         style={{         flex: 1,         backgroundColor: "lightblue",         justifyContent: "center",         alignItems: "center"         }}         >         <Text>They are waiting for some one special</Text>         </View>*/}        <View style={{ flex: 4, backgroundColor: "lightgreen" }}>          <Profile />        </View>      </Animated.View>    );  }}export default ProfileWrapper;