import React, { Component } from "react";import { connect } from "react-redux";import { bindActionCreators } from "redux";import { Text, View } from "react-native";import Swipe from "../components/Swipe";import { MapView } from "expo";import { Card } from "react-native-elements";import * as actions from "../actions";import mapDarkStyle from "../assets/mapDarkStyle";import Icon from 'react-native-vector-icons/MaterialIcons';class DeckScreen extends Component {  static navigationOptions = {    title: "Deck",    headerRight: (      <Icon        name="settings"        size={20}        type="materialicons"        style={{ paddingRight: 20 }}        onPress={() => {          navigation.navigate("setting");        }}      />    ),    tabBarIcon: ({ tintColor }) => {      return (        <Icon name="insert-drive-file" color={tintColor} size={20} type="materialicons" />      );    }  };  renderResultCard = job => {    const initialRegion = {      latitude: job.latitude,      longitude: job.longitude,      latitudeDelta: 0.045,      longitudeDelta: 0.02    };    return (      <Card title={job.jobTitle}>        <View style={{ height: 300 }}>          <MapView            provider={MapView.PROVIDER_GOOGLE}            customMapStyle={mapDarkStyle}            region={initialRegion}            style={{ flex: 1}}            scrollEnabled={false}            cacheEnabled={true}            loadingEnabled={true}          >            <MapView.Marker              coordinate={initialRegion}              title={"yoyo check now"}              description={"bala boom"}            />          </MapView>        </View>        <View style={styles.cardInfo}>          <View style={styles.cardInfoHeader}>            <Text>{job.company}</Text>          </View>          <Text>{job.snippet.replace(/<b>/g, "").replace(/<\/>b>/g, "")}</Text>        </View>      </Card>    );  };  render() {    return (      <View>        <Swipe          keyProp="jobkey"          data={this.props.jobsList}          renderCard={this.renderResultCard}          onSwipeRight={jobObj => this.props.likeJob(jobObj)}        />      </View>    );  }}const styles = {  cardInfo:{    height:100  },  cardInfoHeader: {    flexDirection: "row",    justifyContent: "space-around"  }};const mapStateToProps = state => {  return { jobsList: state.jobsList.results };};const mapDispatchToPros = dispatch => {  return bindActionCreators(actions, dispatch);};DeckScreen.propTypes = {};export default connect(mapStateToProps, mapDispatchToPros)(DeckScreen);