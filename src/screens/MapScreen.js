import React, { Component } from "react";import PropTypes from "prop-types";import { View } from "react-native";import { Button } from "react-native-elements";import { connect } from "react-redux";import * as actions from "../actions";import { MapView } from "expo";import mapDarkStyle from "../assets/mapDarkStyle";import Icon from "react-native-vector-icons/MaterialIcons";class MapScreen extends Component {  static navigationOptions = {    title: "Map",    tabBarIcon: ({ tintColor }) => {      return (        <Icon name="place" color={tintColor} size={20} type="materialicons" />      );    }  };  state = {    region: {      longitude: -100,      latitude: 37,      longitudeDelta: 0.04,      latitudeDelta: 0.09    },    currentCoords: null  };  onRegionChangeComplete = region => {    this.setState({ region });  };  onButtonPress = async () => {    await this.props.fetchJobs(this.state.region);    this.props.navigation.navigate("deck");  };  componentDidMount() {    navigator.geolocation.getCurrentPosition(pos => {      const longitude = pos.coords.longitude;      const latitude = pos.coords.latitude;      this.setState({ region: { ...this.state.region, longitude, latitude } });    });  }  render() {    // if (!this.state.mapLoaded) {    //   // spinner to fake loading    //   return (    //     <View style={{ flex: 1, justifyContent: "center" }}>    //       <ActivityIndicator size={"large"} />    //     </View>    //   );    // }    return (      <View style={styles.container}>        <MapView          customMapStyle={mapDarkStyle}          provider={MapView.PROVIDER_GOOGLE}          style={styles.mapView}          region={this.state.region}          initialRegion={{            longitude: -100,            latitude: 37,            longitudeDelta: 0.04,            latitudeDelta: 0.09          }}          onRegionChangeComplete={this.onRegionChangeComplete}        >          {this.props.jobsList.map(job => (            <MapView.Marker              key={`marker-${job.jobkey}-${job.latitude}-${job.longitude}`}              coordinate={{ latitude: job.latitude, longitude: job.longitude }}              title={"yoyo check now"}              description={"bala boom"}            />          ))}        </MapView>        <View style={styles.searchButtonContainer}>          <Button            title={"Search This Area"}            icon={{ name: "search" }}            backgroundColor={"#009688"}            onPress={this.onButtonPress}          />        </View>      </View>    );  }}const styles = {  container: {    flex: 1,    justifyContent: "center"  },  mapView: {    flex: 1  },  searchButtonContainer: {    position: "absolute",    bottom: 8,    left: -8,    right: -8  }};const mapStateToProps = state => {  return {    jobsList: state.jobsList.results  };};MapScreen.propTypes = {  jobsList: PropTypes.array.isRequired};MapScreen.defaultProps = {  jobsList: []};export default connect(mapStateToProps, actions)(MapScreen);