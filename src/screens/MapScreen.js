import React, { Component } from "react";import { View } from "react-native";import { Button } from "react-native-elements";import { connect } from "react-redux";import * as actions from "../actions";import { MapView } from "expo";class MapScreen extends Component {  state = {    region : {      longitude : -100,      latitude : 37,      longitudeDelta : 0.04,      latitudeDelta : 0.09,    },    currentCoords : null,  };  onRegionChangeComplete = region => {    this.setState ({region});    console.log (this.state.region);  };  onButtonPress = async () => {    await this.props.fetchJobs (this.state.region);    this.props.navigation.navigate ("deck");  };  componentDidMount () {    navigator.geolocation.getCurrentPosition (pos => {      const longitude = pos.coords.longitude;      const latitude = pos.coords.latitude;      this.setState ({region : {...this.state.region, longitude, latitude}});    });  }  render() {    // if (!this.state.mapLoaded) {    //   // spinner to fake loading    //   return (    //     <View style={{ flex: 1, justifyContent: "center" }}>    //       <ActivityIndicator size={"large"} />    //     </View>    //   );    // }    return (      <View style={ styles.container }>        <MapView          style={ styles.mapView }          region={ this.state.region }          onRegionChangeComplete={ this.onRegionChangeComplete }        />        <View style={ styles.searchButtonContainer }>          <Button            title={ "Search This Area" }            icon={ {name : "search"} }            backgroundColor={ "#009688" }            onPress={ this.onButtonPress }          />        </View>      </View>    );  }}const styles = {  container : {    flex : 1,    justifyContent : "center",  },  mapView : {    flex : 1,  },  searchButtonContainer : {    position : "absolute",    bottom : 20,    left : 0,    right : 0,  },};MapScreen.propTypes = {};export default connect (null, actions) (MapScreen);